[{"content":"资讯 Do all JavaScript tools lead to Rome?\nRome的目标是取代Babel, ESLint, Webpack, Prettier, Jest等等\nReact 17.0 Release Candidate: No New Features but Still Lots That\u0026rsquo;s Interesting\nQuickly Find Front-End Issues Like JavaScript or Network Errors\n前端监控解决方案。支持获取客户端报错信息、优化前端资源加载时间、UI页面测试（屏幕录制）。免费试用14天，但是数据存储地址只能选择美国/欧洲，且数据不能迁移。\nTypeScript发布4.0 RC版本\nnpm v7 Now in Beta\nD3 6.0发布\nElectron 10.0.0 Released\n优化策略 从2.9秒到0.6秒，信息流首屏提效80%的秘诀\n教程 Natively Format JavaScript Numbers：原生函数格式化数字，千分位、货币符号、单位等\n🔧 优秀的库/Demo JS相关 Tabris.js：Tabris.js 3.6发布，支持Redux，PDF等。Tabris是一个移动应用开发框架，支持一套代码实现IOS、Android、Windows应用。该框架易上手的，调试、打包、发布一条龙。但控件可定制性不强，对UI/定制业务组件要求比较高的需求，实现起来较麻烦。\n- 支持线上构建，安装开发者APP就能调试，无需其他环境配置\n- 不需要webview\n- 支持npm包，以Node.js的方式引入模块\n- 支持cordova插件（开发者app默认内置摄像头调用、扫码、陀螺仪、谷歌服务等cordova插件）\n- 支持fs，支持ES6、TypeScript和JSX，支持WebSocket等W3C API\nQA Wolf：自动化浏览器测试，支持Chromium、Firefox和WebKit浏览器\ncrypto-hash：哈希加密\nMQTT.js：Node实现的MQTT协议客户端。\nMQTT（Message Queuing Telemetry Transport，消息队列遥测传输协议），是一种基于发布/订阅（publish/subscribe）模式的“轻量级”通讯协议，该协议构建于TCP/IP协议上，由IBM在1999年发布。MQTT的优势在于，能以极少的代码和有限的带宽，为连接远程设备提供实时可靠的消息服务。作为一种低开销、低带宽占用的即时通讯协议，使其在物联网、小型设备、移动应用等方面有较广泛的应用。\nreact-sortable-tree\nvest：表单校验框架，支持Vue、React\nTinykeys：按键绑定库。可用于快捷键指定操作。\nMock Service Worker：REST/GraphQL APImock库。\nMoveable：支持拖动、调整大小、伸缩、旋转、弯曲、缩放、分组等\nvue-moveable：Vue.js wrapper for Moveable\nLeaflet：an open-source JavaScript library for mobile-friendly interactive maps\nfullPage.js：快速创建全屏滚动网站\nanime.js：动画库\nScreenfull.js：实现全屏功能\nslick：轮播库\nEmbla Carousel：轮播库，支持js、ts、react\nFullCalendar：日历，支持拖拽事件\nCypress 5.0：浏览器测试，需要Node 10+\nCSS/动效相关 Halfmoon：构建暗色模式框架\nvantajs：网页动态背景\nOnly CSS: Summer Dream：划桨动画\nAnimation Buttons：按钮效果\nSVG Avatars Configurable Through CSS Vars：通过css变量配置svg\nCSS3 Loader \u0026amp; Spinner：CSS3loading效果\nGlowing Slinky：发光弹簧环效果\nFloating island /w Threejs \u0026amp; GSAP：漂浮岛\ncanvasAPI 实现图片的碎片加载效果：将图片按照 10 行 10 列的网格，拆分成 100 个小碎片，这样就可以对每一个小碎片独立渲染\nztext：3D字体效果\n","description":"","id":0,"section":"fe-monthly","tags":null,"title":"2020-08","uri":"https://zimuzhao.github.io/blog/fe-monthly/2020/2020-08/"},{"content":"CSS 交错动画（Loading）\n交错动画（文本展示）\n粒子动画（雪）\n融合效果\n联系我们\n展示效果 毛玻璃\nButton hover-边框\nhover-多重边框\nclick-微粒\nInput Todo List\nText 发光\n霓虹\n伪3D\n视频背景\nCard 简介\nJS 扭蛋机抽奖动画（Matterjs）\n","description":"","id":1,"section":"fe-monthly","tags":null,"title":"DEMO","uri":"https://zimuzhao.github.io/blog/fe-monthly/demo/"},{"content":"📚 书籍    书名 类型 作者 译者 出版方     小狗钱钱 童话故事 [德]Bodo Schaefer 王钟欣、余茜 南海出版公司   The Wisdom of Psychopaths 心理学 [英]Kevin Dutton 金九菊、程亚克 湖南文艺出版社   墨菲定律 成功 冠诚 - 中国文史出版社    小狗钱钱 《小狗钱钱》讲述的是一个离奇的童话故事：有一天，小女孩吉娅发现一只受伤的白色拉布拉多猎犬，并把它带回了家。可是，有谁会想到，这只普通的小狗却是一个真正的理财天才呢？吉娅和小狗成为了朋友，并从它那里得知，原来所有的愿望都是可以实现的。从这个童话故事里可以了解一些金钱的秘密和真相，以及投资、理财的办法。这个故事描述了在实施这些方法的过程中可能遇到的挑战，并且说明了一些令人难以置信的结果。\n笔记\n 实现财务自由的前提是获知金钱的秘密和规律，「愿望影集」和「成功日记」就是秘诀所在； ️在扩大收入之后，我们的每笔收入分配都需要拿出至少 10% 的部分放入「金鹅账户」，不断养大我们的「金鹅」； 当你积极主动寻求赚钱方法并加以实践时，会有越来越多的同伴加入并帮助你达到目标，这便是属于实现财富自由之路上的集聚效应。  The Wisdom of Psychopaths 译名：异类的天赋\n作者\n凯文·达顿（Kevin Dutton），1967年出生于英国伦敦，心理学博士。现为牛津大学实验心理学系的研究型心理学家。他是享誉世界的心理学、精神病专家，英国皇家医学会和精神病科学研究学会成员。达顿一生专注于精神病学领域，潜心钻研近30年，他在精神病研究领域的发现频频被《泰晤士报》、BBC和Discovery探索频道等知名媒体报道，是英国乃至世界不可或缺的研究“不正常人格”的专家。\n简介\n享誉世界的心理学家、精神病学家凯文·达顿从大胆而严谨的心理实验出发，探寻疯子与天才之间的秘密关系。为了获取准确的一手信息，他甚至亲自造访精神病院，不惜将自己伪装成精神病患者，接近真正的病人。他在书中提出了一个令人震惊的观点：致命与救命、冲突与秩序、善与恶等两极之间，存在一座连通的桥梁，普通人只要稍加尝试“异类”的思考方式，就能让负面情绪得到正向发挥，很多难题便可迎刃而解。作者分析了阿姆斯特朗和詹姆斯·邦德等人的性格特征，告诉读者人格缺陷不可怕，它是一把双刃剑，例如不善言辞、缺乏亲和力、容易冲动，实际上对应着沉稳、独立与厉害的行动力。人们尊敬的“苹果之父”乔布斯、天才画家凡·高等都是这类人的代表。他们意志坚定、处变不惊，一旦有机会，便能迅速脱颖而出，成为迷人而强大的角色。\n墨菲定律 墨菲定律、帕金森定律和彼德原理并称为二十世纪西方文化三大发现。\n用理论揭示事物的逻辑规律，推演命运发展的因果关系。用理论指导生活和工作，使生活更美好。\n笔记\n思维控制了一个人的思想和行动，也决定了一个人的视野、事业和成就。不同的观念和态度产生不同的行为，不同的行为产生不同的结果。人与人之间的差别，从根本上说就是思维的差别。\n 任何问题最可能的解决办法是步骤最少的办法。 - 苏格拉底\n  成功定律  洛克定律：确定\u0026rsquo;跳一跳，够得着\u0026rsquo;的目标，专注行动 瓦拉赫效应：要懂得经营自己的长处 木桶定律：克服短板，短处往往是限制能力的关键 艾森豪威尔法则：即四象限法则。\u0026lt;分清主次，高效成事\u0026gt;\n重要\u0026amp;紧急（马上做） -\u0026gt; 重要\u0026amp;不紧急（计划做） -\u0026gt; 不重要\u0026amp;紧急（授权做） -\u0026gt; 不重要\u0026amp;不紧急（减少做） 奥卡姆剃刀定律：如无必要，勿增实体 墨菲定律：如果事情有变坏的可能，不管这种可能性有多小，它总会发生。\u0026lt;不存侥幸心理\u0026gt;   职场法则  蘑菇定律：切勿锋芒毕露。少说话，多做事！ 青蛙法则：美国康奈尔大学实验：沸水 vs 温水煮青蛙。\u0026lt;居安思危\u0026gt; 鸟笼效应：遵循公司规则，用本领说话 鲁尼恩定律：赛跑时不一定快的赢，打架时不一定弱的输。笑到最后的才是赢家。\u0026lt;戒骄戒躁\u0026gt; 链状效应：近朱者赤近墨者黑。\u0026lt;想叹气时就微笑\u0026gt;   人际规律  首因效应：先入为主的第一印象 刺猬法则：与人相处，距离产生美 投射效应：人心各不同，不要以己度人 自我暴露定律：适当暴露，让关系更亲密 刻板效应：别让记忆中的刻板挡住人缘\u0026lt;年龄、性别、外貌、衣着、地域、民族\u0026gt; 换位思考定律：将心比心，灾难发生在别人身上是故事，发生在自己身上就是事故   经济效应  公地悲剧\n人们对于公共设施/公有物的态度往往是个人利益最大化。消灭公有制是不现实的（英国圈地运动），需要政府制定措施并落实到具体的人去严格监管。 泡沫经济——上帝欲使其灭亡，必先使其疯狂\n泡沫经济源于金融投机。1985～1989，日本股价、土地暴涨，1990骤跌。荷兰郁金香。 测不准定律——越是测不准越有创造性\n股市的走向是无公式、规律可解释的，取决于整体环境下的群体心理。投资者的狂热导致市场的跟风行为，而不理性的跟风会导致市场崩溃。创新比努力重要（得克萨斯人拍下自由女神像的垃圾清理工作，废物变宝售卖周边） 口红效应：经济危机中逆势而上的商机\n经济危机时的客观事实：韩国-颜色明艳、造型另类的服装销量好；日本-服装产业低迷时，修鞋补衣服火热；美国-经济萧条时，好莱坞影业大热。经济萧条时期，人们的收入和对未来的预期都会降低，减少大宗商品（车、房、旅游）的购买，反而会省下一笔不少的闲钱。用于购买廉价的非必需物。口红效应三个条件：1. 商品除了实用之外，还要有附加价值。例如同样是几十块钱，买咖啡/打车只能享受那么几十分钟，而看电影有足足的两小时左右的舒适体验；2. 价格相对够低。3. 商家宣传，推波助澜。常见的生机产业：化妆品、文娱、动漫游戏 乘数效应（凯恩斯乘数）：一个变量的变化，以乘数加速度的方式，引起最终量的增加。 拉动效应\n高铁带动沿线新投资。湖北咸宁经济开发区，武广高铁，中铁第四勘察设计院总工程师说，未来三到五年通过高速铁路，武汉将建成一个辐射全国的大都市圈，以武汉为中心5小时内可到达的城市，几乎囊括大半个中国。   决策学问  机会成本：鱼和熊掌不能兼得，赌徒心态不能常赢。机会成本揭示了资源稀缺与选择多样化之间的关系，我们必须做出选择。 羊群效应：从众心理会让人丧失基本的判断。收集信息并敏锐判断，是让人们减少盲从行为，更多地运用理性思维的最好办法。 沉没成本：难以割舍已经失去的只会失去更多 博傻理论：投机行为的关键是判断，只要自己不是最大的笨蛋，结果就是赢多赢少的问题。投资者的目的不是犯错，而是期待更大的笨蛋代替自己，并从中得到好处。如何避免做最大的笨蛋？要具备对别人心理的准确猜测和判断能力，别人看涨之前投资，别人看跌之前撒手。 消费者剩余效应：消费者剩余量=实际支付-愿意支付，在花钱中学会省钱 前景理论：患得患失是一种纠结   管理原则  二八法则：抓住其主宰作用的关键 犯人船理论：制度比人制更有效 公平理论：绝对公平是乌托邦 鲇鱼效应：让外来鲇鱼助你越游越快   竞争规则  零和游戏定律：大家好才是真的好 马蝇效应：激励自己，跑得更快 波特法则：有独特定位，才会有独特的成功 权变理论：随具体情境而变 及时淘汰，不断创新   两性秘密  不要优柔寡断 女人远看才美，男人近看才实 趁“需”而入   生活准则  酸葡萄甜柠檬， 阿Q精神 因果定律：善待他人就是善待自己    📰 文章 Vlog入门指南，满屏都是干货（作者：杯子，公众号：一杯仙气）\n你是如何把一个微信公众号运营到可以养活自己的？\n📖 摘要  最好的生活状态是：一个人，安静而丰盛；两个人，温暖而踏实。 爱你的人会给你三样东西：足够的安全感、浪漫的仪式感、幸福的宠溺感。 人这一辈子，有四件事不能太执着，一是长久，二是是非，三是善恶，四是生死。\n执着有时候是种美德，但是如果太纠结\u0026rsquo;长久\u0026rsquo;，你就容易患得患失，看不清脚下的路；太纠结\u0026rsquo;是非\u0026rsquo;，你就容易钻牛角尖，世界上本来就没有那么多绝对是、或者绝的东西；太纠结·善恶\u0026rsquo;，你眼不得沙子，有时候会自以为是，规则按着你的棱角改变，总会失望。太纠结‘生死’，你的视野就小，这一辈子直接成为二等层次的人。 这世间从没有来日方长，许多人都是乍然离场。哪怕朝夕相对，也别忘给他们一个拥抱。 你要记住大雨中为你撑伞的人，黑暗中默默抱紧你的人，逗你笑的人，陪你彻夜聊天的人，坐车来看望你的人，陪你哭过的人，在医院陪你的人，总把最好留给的人。一辈子很短，珍惜每一个你爱的和爱你的人。用尽全力，好好活。 一开始爱你是因为你灿烂若朝阳，后来更爱你是因为你也能为我温润如月光。 你要发光，才能看到你。要友善，才敢接近你。要优秀，才有可能爱上你。 过去了的，就永远过去了。住在心里的那个人，永远是初次相见时的那个样子，隔再久，也不会变。 不沾沾自喜，也不自怨自艾。 2019 人民日报  不要轻易熬夜，按时睡觉。 多学一些知识或技能，技多不压身。 带父母定期体检，带他们一起去旅行。 不要整天外卖，学会做一些简单又好吃的饭。 用真心交朋友，真诚和善良永远拥有最打动人的力量。 每个月定期存钱，好的理财习惯能给你更多人生自由。 一周读一本书，一开始可能会很难，但做到了真的很有用。 减少无意义的社交，每个人身边靠得住的朋友就那么几个。 不要拖延，立即行动，时间真的很快，不要总是“以后再说”。 写生活日记、工作总结，定期复盘，记录下自己的经验教训。 好好护肤，好好打扮自己，外貌不是全部，但“精气神”很重要。 不要成天刷手机打游戏， 适度的娱乐很重要，到千万不要成瘾。 开始健身，别让自己渐渐变成一个身材臃肿、大腹便便的中年人。 每年旅行一次，多去看看，外面的世界可以扩大自己的视野和格局。 认真考虑自己想要什么，想过怎样的一生，不断向理想的自己接近。 找到一件你内心真正想做却一直拖拉没开始的事情，坚持并且专注地完成。 为自己的人生负责，不要因为孤独、父母、面子等原因仓促地选择一个人结婚。 挣字和赚字，一字之差。一个提手旁，靠劳动；一个贝字旁，靠资本。两者却有着天渊之别。 养成良好的生活习惯。比 如健身、跑步、阅读、表达、沟通、学习等等，好的生活习惯，会让你的人生开挂。    ","description":"不仅仅是书籍，还是信息中心","id":2,"section":"books","tags":null,"title":"2020","uri":"https://zimuzhao.github.io/blog/books/2020/"},{"content":"资讯 JS现状调查\n职位需求\n如何评论浏览器最新的 WebAssembly 字节码技术?\n优化策略 webpack打包优化\n前端性能优化\n样例笔记 Blender导出JSON格式教程threejs\n基于G6的xmind\n大文件上传\u0026amp;断点续传\nHTML 5 Drag and Drop 入门教程\n优秀的库/Demo midori：图像背景动画\nSuper Expressive：构建正则表达式\ncurrency：处理货币\nVite：基于 Vue3 单文件组件的非打包开发服务器\njExcel：在线创建表格的轻量级插件\nx-spreadsheet：在线电子表格\nPDF-LIB：创建和修改PDF文档\n","description":"","id":3,"section":"fe-monthly","tags":null,"title":"2020-07","uri":"https://zimuzhao.github.io/blog/fe-monthly/2020/2020-07/"},{"content":"下载地址\n在线网站推荐榜 资讯 今日热榜：整合多个内容渠道的热点信息，运营人必备～\n全历史：将每个国家的历史用时间轴串了起来，可以清晰地看到朝代大事件和代表人物\n四大名著：地图路线\nwikiHow：学习做任何事，高质量的指导手册\n问答库：免费考试题库，包括公务员考试，建筑工程，注册会计师，考研，会计等\n耳聆网：声音分享平台，拥有庞大的声音资源云库和完善的授权使用机制。其中的声音地图收录了包括自然和城市声音景观、种环境氛围等实地录音，让声音带有地理信息，很有意思。\n工具 在线PS：智能抠图，证件照换底色\n草料二维码：生成二维码\n举牌小人\n镜像炫光生成器\n文章生成器：输入主题，一键生成\n船长解析-vip视频在线解析：支持腾讯视频、爱奇艺、优酷、芒果TV、B站\n游戏 恐龙快跑：浏览器地址栏输入chrome://dino/，按空格键开始游戏哦\n初音音乐生成器：只需要点击鼠标，或者敲打键盘，初音的声音便会生成，根据你敲打的频次等，声音发生变化，莫名有点停不下来～\n编程技术 LeetCode：刷题必备\n100dayscss：CSS在线练习\nBestOfJs：每周热点排名，支持邮件订阅\nBlog\n廖雪峰\n小蘿蔔丁\nAlloyTeam\n陈大鱼头-codepen\nxiaoluoboding：友情链接，前端技术月刊\n其他 大像素全景\n假装电脑升级\n数据可视化工具目录：图表适用范围\n英文名取名\nnameberry\n百词斩出品\nbehindthename（查询名字来源、变体、历史、受欢迎程度等）\n","description":"","id":4,"section":"tools","tags":null,"title":"在线网站","uri":"https://zimuzhao.github.io/blog/tools/website/"},{"content":"ES6设计模式专栏\n单例模式 一个类仅有一个实例对象。\n适用场景：一个单一对象。比如：弹窗，无论点击多少次，弹窗只应该被创建一次。\njavascript class CreateUser { constructor(name) { this.name = name; this.getName(); } getName() { return this.name; } } // 代理实现单例模式 var ProxyMode = (function() { var instance = null; return function(name) { if(!instance) { instance = new CreateUser(name); } return instance; } })(); // 测试单体模式的实例 var a = new ProxyMode(\u0026quot;aaa\u0026quot;); var b = new ProxyMode(\u0026quot;bbb\u0026quot;); // 因为单体模式是只实例化一次，所以下面的实例是相等的 console.log(a === b); //true\n策略模式 将算法的使用算法的实现分离。定义一系列的算法，把他们一个个封装起来，并且使他们可以相互替换。\n一个基于策略模式的程序至少由两部分组成：\n 一组策略类（可变），策略类封装了具体的算法，并负责具体的计算过程； 环境类Context（不变），Context接受客户的请求，随后将请求委托给某一个策略类。  javascript var levelOBJ = { \u0026quot;A\u0026quot;: function(money) { return money * 4; }, \u0026quot;B\u0026quot; : function(money) { return money * 3; }, \u0026quot;C\u0026quot; : function(money) { return money * 2; } }; /*环境类*/ var calculateBouns =function(level,money) { return levelOBJ[level](money); }; console.log(calculateBouns('A',10000)); // 40000\n代理模式 定义：为一个对象提供一个代用品或占位符，以便控制对它的访问。\n常用的虚拟代理形式：某一个花销很大的操作，可以通过虚拟代理的方式延迟到这种需要它的时候才去创建（例：使用虚拟代理实现图片懒加载）\n图片懒加载的方式：先通过一张loading图占位，然后通过异步的方式加载图片，等图片加载好了再把完成的图片加载到img标签里面。\njavascript var imgFunc = (function() { var imgNode = document.createElement('img'); document.body.appendChild(imgNode); return { setSrc: function(src) { imgNode.src = src; } } })(); var proxyImage = (function() { var img = new Image(); img.onload = function() { imgFunc.setSrc(this.src); } return { setSrc: function(src) { imgFunc.setSrc('./loading,gif'); img.src = src; } } })(); proxyImage.setSrc('./pic.png');使用代理模式实现图片懒加载的优点还有符合单一职责原则。减少一个类或方法的粒度和耦合度。\n中介者模式 通过一个中介者对象，其他所有的相关对象都通过该中介者对象来通信，而不是相互引用，当其中的一个对象发生改变时，只需要通知中介者对象即可。通过中介者模式可以解除对象与对象之间的紧耦合关系。\n例如：现实生活中，航线上的飞机只需要和机场的塔台通信就能确定航线和飞行状态，而不需要和所有飞机通信。同时塔台作为中介者，知道每架飞机的飞行状态，所以可以安排所有飞机的起降和航线安排。\n中介者模式适用的场景：例如购物车需求，存在商品选择表单、颜色选择表单、购买数量表单等等，都会触发change事件，那么可以通过中介者来转发处理这些事件，实现各个事件间的解耦，仅仅维护中介者对象即可。\n`javascript\nvar goods = { //手机库存\n\u0026lsquo;red|32G\u0026rsquo;: 3,\n\u0026lsquo;red|64G\u0026rsquo;: 1,\n\u0026lsquo;blue|32G\u0026rsquo;: 7,\n\u0026lsquo;blue|32G\u0026rsquo;: 6,\n};\n//中介者\nvar mediator = (function() {\nvar colorSelect = document.getElementById(\u0026lsquo;colorSelect\u0026rsquo;);\nvar memorySelect = document.getElementById(\u0026lsquo;memorySelect\u0026rsquo;);\nvar numSelect = document.getElementById(\u0026lsquo;numSelect\u0026rsquo;);\nreturn {\nchanged: function(obj) {\nswitch(obj){\ncase colorSelect:\n//TODO\nbreak;\ncase memorySelect:\n//TODO\nbreak;\ncase numSelect:\n//TODO\nbreak;\n}\n}\n}\n})();\ncolorSelect.onchange = function() {\nmediator.changed(this);\n};\nmemorySelect.onchange = function() {\nmediator.changed(this);\n};\nnumSelect.onchange = function() {\nmediator.changed(this);\n};\n`\n装饰者模式 在不改变对象自身的基础上，在程序运行期间给对象动态地添加方法。\n例如：现有4种型号的自行车分别被定义成一个单独的类，如果给每辆自行车都加上前灯、尾灯、铃铛这3个配件，如果用类继承的方式，需要创建4*3=12个子类。但如果通过装饰者模式，只需要创建3个类。\n装饰者模式适用的场景：原有方法维持不变，在原有方法上再挂载其他方法来满足现有需求；函数的解耦，将函数拆分成多个可复用的函数，再将拆分出来的函数挂载到某个函数上，实现相同的效果但增强了复用性。\njavascript // 例：用AOP装饰函数实现装饰者模式 Function.prototype.before = function(beforefn) { var self = this; //保存原函数引用 return function(){ //返回包含了原函数和新函数的 '代理函数' beforefn.apply(this, arguments); //执行新函数，修正this return self.apply(this,arguments); //执行原函数 } } Function.prototype.after = function(afterfn) { var self = this; return function(){ var ret = self.apply(this,arguments); afterfn.apply(this, arguments); return ret; } } var func = function() { console.log('2'); } //func1和func3为挂载函数 var func1 = function() { console.log('1'); } var func3 = function() { console.log('3'); } func = func.before(func1).after(func3); func();\n","description":"","id":5,"section":"fe-monthly","tags":null,"title":"Design pattern","uri":"https://zimuzhao.github.io/blog/fe-monthly/design-pattern/"},{"content":"装修指南\n施工先后顺序\n22个家居细节\n居家好物推荐\n厨房设计\n厨房装修的12个细节\n日本人这15个走心设计\n用2000元来打造一套全屋的智能系统\n日本人有哪些家居行为，中国人难以理解，实际却很实用？\n","description":"家居设计指南","id":6,"section":"books","tags":null,"title":"家居","uri":"https://zimuzhao.github.io/blog/books/home-design/"},{"content":"🌞 日常生活 插件下载（需知道url / extension ID）\nMomentum  Momentum: 替换 chrome 原有首页的插件    左上角：搜索 右上角：展示天气 中间：展示时间，外加TODO项 左下角：设置 右下角：TODO设置   购物党自动比价工具 全网自动比价，提供价格历史、口碑评分等查询功能，支持商品促销活动，商城优惠信息查询\n 购物党: 商品比价   One Click Translate 右键调用Google翻译\n one-click-translate: 右键调用google翻译   🔧 小工具 FireShot 网页截屏工具，支持滚动截屏\n FireShot: 滚动截屏   Copyfish 🐟 Free OCR Software 从图像，视频或PDF中提取文本\n Copyfish: 文本提取   EditThisCookie EditThisCookie是一个cookie管理器。可以添加，删除，编辑，搜索，锁定和屏蔽cookies！\n EditThisCookie: cookie管理   SwitchyOmega 一款浏览器代理工具, 可以让浏览器的请求代理都指向代理服务, 比如将所有请求指向 whistle, 将 *.oa.com 的服务指向内网, 将你需要的请求指向科学上网的代理服务, 让你轻松应对复杂的网络环境.\n SwitchyOmega: 请求代理   SimpleExtManager 一款管理插件的插件。每个插件运行时都会占用一定内存，当插件一多，就会影响 chrome 的速度。SimpleExtManager能方便地禁用、启用、删除插件，实现按需加载的目的。\n SimpleExtManager: 插件管理   Extension Manager 另一款管理插件的插件。支持分组管理、配置排序规则，还可以快速的切换插件的开启与关闭。\n Extension Manager: 插件管理   Panic Button 一键切换正在浏览的页面，可以设置安全网页，安全网页会在隐藏标签页之后打开。适合不想让别人看到浏览内容时使用。支持设置快捷键与设置恢复浏览页的密码。\n Panic Button: 一键切换正在浏览的内容   🤔 学习 掘金 优质内容推荐工具，可以设置不占用标签页\n 掘金: 优质内容推荐工具   Octotree 让浏览 github 代码变得像本地编辑器一样轻松, 可以搜索文件, 点击代码目录跳转等, 方便地在文件之间切换\n Octotree: 逛 Github 必备   💼 辅助开发 FeHelper 官网\nFeHelper 由百度 Alien（阿烈叔） 开源，集成很多实用功能。\n FeHelper: 前端工具集成   Wappalyzer 一款可以在浏览器里查看当前网站所使用技术栈/工具库的插件。\n Wappalyzer: 网站技术栈查看   whatruns 网站技术栈分析工具，一键分析(分析时间在5-10秒左右)。\n whatruns: 网站技术栈分析   Web Maker 前端的小伙伴都熟悉codepen或者jsfiddle，也就是提供在线写demo，分享给别人用于展示或调试。而Web Maker作为本地插件，主要是可以充当草稿纸的作用，能让你快速写一个demo。优点有很多，比如实时预览，支持多种快捷键，支持添加自定义库等这些在jsfiddle常见的功能。如果想要分享，它也支持！只要点击一个按钮即可原封不动地提交你所写的内容到codepen，接下来就和使用codepen一样了。\n Web Maker: 本地demo调试   JSON Viewer 快速格式化JSON\nTalend API Tester 一个类似Postman的Api测试工具\n Talend API Tester: API测试   Network+ 解决浏览器无法截取请求后自定义修改并重发请求的需求，用于网络记录和重新发送的DevTools\n Network\u0026#43;: 修改请求   Vue.js devtools vue 开发辅助工具。能像审查元素一样展示组件结构，直观地看到data、props、state，支持组件、字段检索。\n Vue.js devtools: vue开发调试必备   React Developer Tools 官方维护的一个 react 开发辅助工具。\n React Developer Tools: react开发者必备   Redux DevTools Redux DevTools 让我们方便地追踪数据流的变化, 看到每一个改变是由哪个 action 带来的. 还能清晰地看见整个 store 的情况, 根据数据流记录, 让应用的状态回到某个时间节点.\n Redux DevTools: redux开发者必备   Lighthouse 前端性能优化测试工具\n Lighthouse: 性能测试   ","description":"","id":7,"section":"tools","tags":null,"title":"Chrome 插件","uri":"https://zimuzhao.github.io/blog/tools/plugin-chrome/"},{"content":"VS Code官网\n编辑器从Eclipse-\u0026gt;MyEclipse-\u0026gt;IDEA-\u0026gt;webstorm，觉得自己找到了真爱，打死不换，每每同事安利的时候，都坚定地站队webstorm。直到升级版本后\u0026hellip;webstorm打击盗版真的是太狠了。遂决定大步奔向VS Code的怀抱，简单配置、装了些插件之后，真香～～\n 快捷键: MAC版   基础配置篇 Chinese(Simplified) Language Pack for Visual Studio Code  Language Pack: 汉化语言包   Darcula Theme 主题插件，在其他编辑器上用习惯了Darcula的配色方案，装上之后一下子亲切不少～\n主题这个是因人而异的啦，大家可以直接在插件那搜索theme,诸多款式任君挑选\n Darcula Theme: 主题配色   Eclipse Keymap 快捷键。习惯了Eclipse的快捷键，所有编辑器用的都是这套。\n插件装到这里已经感觉很畅快了，而且启动速度比webstorm快，赞一个～\n Eclipse Keymap: 快捷键   indent-rainbow 缩进颜色区分，未正常缩进时会变红。舒舒服服看代码～\n indent-rainbow: 缩进标志   Markdown Preview Enhanced  Markdown Preview Enhanced: markdown预览   开发利器 ESLint  ESLint: 代码检查   Vetur 详细介绍移步：https://github.com/vuejs/vetur\n Vetur: vue开发者必备   Prettier  Vetur: 代码格式化   Less intelliSense  Less intelliSense: less变量与混合提示   npm Intellisense 使用require()导入模块代码时，npm Intellisense组件会自发进行包提示。\n npm Intellisense: 包导入提示   Image preview 光标悬浮在图片路径上时，显示图片预览。能快速检查到引用是否正确\n Image preview: 图片预览   Live Server 适合前端开发。这个插件能实现页面实时预览，保存即更新。\n Live Server: 实时预览   CSS Peek 前端开发。鼠标悬停在元素的类名或元素ID上，就可以看到应用于这个元素的 CSS 规则。\n CSS Peek: 鼠标悬停查看css样式   Beautify 代码格式化。支持自定义规则。\n Live Server: 实时预览   Auto Rename Tag 自动重命名成对的标签。\n Live Server: 实时预览   Git Tip: 修改代码时，VS code会对不同的修改进行不同形式的标注：红色箭头代表有删除行，蓝色开头代表修改，绿色开头代表新增。Ctrl + shift + G打开代码管理工具，可以查看修改文件。\nGit history 查看/搜索文件提交历史\n呼出命令git log\n Git history: Git提交记录查看   ","description":"","id":8,"section":"tools","tags":null,"title":"VS Code插件","uri":"https://zimuzhao.github.io/blog/tools/plugin-vscode/"},{"content":"ScreenToGif gif图帧率调整。\n微信公众号后台限制，上传的gif图片不能超过300帧。怎么破呢？\nScreenToGif支持每隔N帧抽取1帧，这样可以让gif图减少帧数的同时，保证流畅性。\n ScreenToGif: M帧gif图系数 = 300/(M-300) \u0026lt;结果取整\u0026gt;   下载地址 (提取码: 5eft)\n","description":"","id":9,"section":"tools","tags":null,"title":"软件篇-Windows","uri":"https://zimuzhao.github.io/blog/tools/software-windows/"}]